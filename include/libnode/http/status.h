// Copyright (c) 2012 Plenluno All rights reserved.

#ifndef LIBNODE_HTTP_STATUS_H_
#define LIBNODE_HTTP_STATUS_H_

#include <libj/status.h>

namespace libj {
namespace node {
namespace http {

#define LIBNODE_HTTP_STATUS_MAP(GEN) \
    GEN(100, CONTINUE) \
    GEN(101, SWITCHING_PROTOCOLS) \
    GEN(200, OK) \
    GEN(201, CREATED) \
    GEN(202, ACCEPTED) \
    GEN(203, NON_AUTHORITATIVE_INFORMATION) \
    GEN(204, NO_CONTENT) \
    GEN(205, RESET_CONTENT) \
    GEN(206, PARTIAL_CONTENT) \
    GEN(300, MULTIPLE_CHOICES) \
    GEN(301, MOVED_PERMANENTLY) \
    GEN(302, FOUND) \
    GEN(303, SEE_OTHER) \
    GEN(304, NOT_MODIFIED) \
    GEN(305, USE_PROXY) \
    GEN(307, TEMPORARY_REDIRECT) \
    GEN(400, BAD_REQUEST) \
    GEN(401, UNAUTHORIZED) \
    GEN(402, PAYMENT_REQUIRED) \
    GEN(403, FORBIDDEN) \
    GEN(404, NOT_FOUND) \
    GEN(405, METHOD_NOT_ALLOWED) \
    GEN(406, NOT_ACCEPTABLE) \
    GEN(407, PROXY_AUTHENTICATION_REQUIRED) \
    GEN(408, REQUEST_TIMEOUT) \
    GEN(409, CONFLICT) \
    GEN(410, GONE) \
    GEN(411, LENGTH_REQUIRED) \
    GEN(412, PRECONDITION_FAILED) \
    GEN(413, REQUEST_ENTITY_TOO_LARGE) \
    GEN(414, REQUEST_URI_TOO_LONG) \
    GEN(415, UNSUPPORTED_MEDIA_TYPE) \
    GEN(416, REQUESTED_RANGE_NOT_SATISFIABLE) \
    GEN(417, EXPECTATION_FAILED) \
    GEN(500, INTERNAL_SERVER_ERROR) \
    GEN(501, NOT_IMPLEMENTED) \
    GEN(502, BAD_GATEWAY) \
    GEN(503, SERVICE_UNAVAILABLE) \
    GEN(504, GATEWAY_TIMEOUT) \
    GEN(505, HTTP_VERSION_NOT_SUPPORTED)

#define LIBNODE_HTTP_STATUS_GEN(VAL, NAME) NAME = VAL,

class Status : LIBJ_STATUS(Status)
 public:
    enum Code {
        LIBNODE_HTTP_STATUS_MAP(LIBNODE_HTTP_STATUS_GEN)
    };

    static CPtr create(Int code, String::CPtr msg = String::null());
};

}  // namespace http
}  // namespace node
}  // namespace libj

#endif  // LIBNODE_HTTP_STATUS_H_
